A list is a collection of items in a particular order. You can make list that includes
the letters of the alphabet, the digits from 0-9, or the names of all the people in your family.
You can put anything you want into a list the items in your list don't have to be related in any particular way.
Because a list usually contains more than one element, it's a good idea to make the name of your list plural such as
letters, digits, or names. In python, square brackets ([]) indicates a list, and individual elements in the list
are separated by commas. 

Changing, Adding, and Removing elements
. [0]
. append()
. insert()
. del
. remove()
. pop()


Organizing a List

Often, your lists will be created in an unpredicatble order, because you can't always control the order in which
your users provide their data. Python provides a number of different ways to organize your lists, depending on the
program

Looping Through an Entire List

When you're using loops for the first time, keep in mind that the set if steps is repeated once for each 
item in the list, no matter how many items are in the list. If you have a million items in your list,
Python repeats these steps a million times--and usually very quickly.

Also keep in mind when writing your own for loops that you can choose any name you want for the 
temporary variable that will be associated with each value in the list. However, it's helpful to 
choose a meaningful name that represents a single item from the lists.


Tuples, on the other hand, are written in ink. They’re similar to lists in that they can hold multiple items,
 but unlike lists, tuples are immutable, meaning you can’t modify them after you’ve created them.


  Now what is that thing in Python? What is a tuple? A tuple is a finite, ordered, immutable sequence of values.
  That’s a mouthful. It gets worse. Python borrows the name and the notation from mathematics, which means per definition, 
  each element is separated by a comma inside a tuple, and all the elements are surrounded by a single pair of parentheses.