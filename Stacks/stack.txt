 A stack is a more specialized queue, also known as a LIFO or last-in, first-out queue.
 It works almost exactly like a regular queue, except that elements must now join and leave 
 it through only one end called the top of the stack. The name top reflects the fact that real-world stacks tend to be vertical.

 Stacks are widely used in computing for various purposes. Perhaps the most familiar context for a programmer 
 is the call stack containing the functions in the order they were called. Python will reveal this stack to you through 
 a traceback in case of an unhandled exception. It’s usually a bounded stack with a limited capacity, which you’ll find out 
 about during a stack overflow error caused by too many recursive calls.



Binary search is a classic algorithm in computer science. It often comes up in programming contests and technical interviews.
 Implementing binary search turns out to be a challenging task, even when you understand the concept. 
 Unless you’re curious or have a specific assignment, you should always leverage existing libraries to do a binary search in 
 Python or any other language.

 How might you look for something in your backpack? You might just dig your hand into it, pick an item at random, and see if it’s the one you wanted. 
 If you’re out of luck, then you put the item back, rinse, and repeat. This example is a good way to understand random search, which is one of the least efficient search algorithms. 
 The inefficiency of this approach stems from the fact that you’re running the risk of picking the same wrong thing multiple times.